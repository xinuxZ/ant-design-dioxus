warning: unused import: `quote::quote`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/css_macro.rs:3:5
  |
3 | use quote::quote;
  |     ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: function `parse_responsive_variant` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/theme_variants.rs:145:4
    |
145 | fn parse_responsive_variant(input: &str) -> Option<(String, &str)> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `parse_pseudo_variant` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/theme_variants.rs:158:4
    |
158 | fn parse_pseudo_variant(input: &str) -> Option<(String, &str)> {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: function `get_media_query_for_variant` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/theme_variants.rs:187:4
    |
187 | fn get_media_query_for_variant(variant: &str) -> String {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `Document` is never constructed
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/wasm_types.rs:50:16
   |
50 |     pub struct Document;
   |                ^^^^^^^^

warning: function `css_class_impl` is never used
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/css_macro.rs:28:8
   |
28 | pub fn css_class_impl(input: TokenStream) -> TokenStream {
   |        ^^^^^^^^^^^^^^

warning: function `css_multi_if_impl` is never used
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust-macros/src/css_macro.rs:37:8
   |
37 | pub fn css_multi_if_impl(input: TokenStream) -> TokenStream {
   |        ^^^^^^^^^^^^^^^^^

warning: `css-in-rust-macros` (lib) generated 7 warnings (run `cargo fix --lib -p css-in-rust-macros` to apply 1 suggestion)
warning: unused import: `std::thread`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/dev_experience/diagnostics.rs:8:5
  |
8 | use std::thread;
  |     ^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Duration` and `Instant`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/dev_experience/diagnostics.rs:9:17
  |
9 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^  ^^^^^^^

warning: unused import: `HashSet`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/mod.rs:5:33
  |
5 | use std::collections::{HashMap, HashSet};
  |                                 ^^^^^^^

warning: unused import: `std::fs`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/mod.rs:6:5
  |
6 | use std::fs;
  |     ^^^^^^^

warning: unused import: `std::fs`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/reload_manager.rs:6:5
  |
6 | use std::fs;
  |     ^^^^^^^

warning: unused import: `Path`
 --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/reload_manager.rs:7:17
  |
7 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `ChangeType`
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/reload_manager.rs:13:46
   |
13 | use super::change_detector::{ChangeDetector, ChangeType, FileChange};
   |                                              ^^^^^^^^^^

warning: unused imports: `Read`, `Write`, and `self`
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/performance/cache.rs:12:15
   |
12 | use std::io::{self, Read, Write};
   |               ^^^^  ^^^^  ^^^^^

warning: unused import: `Path`
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/performance/cache.rs:13:17
   |
13 | use std::path::{Path, PathBuf};
   |                 ^^^^

warning: unused import: `Instant`
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/performance/mod.rs:16:27
   |
16 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/websocket_server.rs:570:17
    |
570 |         base64::encode(hash)
    |                 ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: unused variable: `theme`
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/css/component_style.rs:212:70
    |
212 |     let mut generator = DefaultComponentStyleGenerator::new(config, |theme| {
    |                                                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_theme`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `cache_manager`
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/css/pipeline.rs:211:21
    |
211 |         if let Some(cache_manager) = &self.cache_manager {
    |                     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cache_manager`

warning: variable does not need to be mutable
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/css/pipeline.rs:446:13
    |
446 |         let mut processor = StyleProcessor::new();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variant `Snippet` is never constructed
    --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/dev_experience/code_completion.rs:1022:5
     |
1008 | enum CompletionType {
     |      -------------- variant in this enum
...
1022 |     Snippet,
     |     ^^^^^^^
     |
     = note: `CompletionType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
     = note: `#[warn(dead_code)]` on by default

warning: fields `line` and `position_in_line` are never read
    --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/dev_experience/code_completion.rs:1035:5
     |
1029 | struct CompletionAnalysisContext {
     |        ------------------------- fields in this struct
...
1035 |     line: String,
     |     ^^^^
1036 |     /// 行内位置
1037 |     position_in_line: usize,
     |     ^^^^^^^^^^^^^^^^
     |
     = note: `CompletionAnalysisContext` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `change_detector` is never read
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/mod.rs:221:5
    |
217 | pub struct HotReloadManager {
    |            ---------------- field in this struct
...
221 |     change_detector: ChangeDetector,
    |     ^^^^^^^^^^^^^^^

warning: field `content_hash` is never read
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/change_detector.rs:286:5
    |
284 | struct CacheEntry {
    |        ---------- field in this struct
285 |     /// 文件内容哈希
286 |     content_hash: u64,
    |     ^^^^^^^^^^^^
    |
    = note: `CacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `permissions` is never read
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/file_watcher.rs:142:5
    |
134 | struct FileState {
    |        --------- field in this struct
...
142 |     permissions: Option<u32>,
    |     ^^^^^^^^^^^
    |
    = note: `FileState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `id` and `created_at` are never read
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/reload_manager.rs:138:5
    |
136 | struct BuildTask {
    |        --------- fields in this struct
137 |     /// 任务ID
138 |     id: String,
    |     ^^
...
146 |     created_at: Instant,
    |     ^^^^^^^^^^
    |
    = note: `BuildTask` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `id`, `user_agent`, `current_url`, and `authenticated` are never read
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/websocket_server.rs:133:5
    |
131 | struct ClientConnection {
    |        ---------------- fields in this struct
132 |     /// 客户端ID
133 |     id: String,
    |     ^^
...
141 |     user_agent: Option<String>,
    |     ^^^^^^^^^^
142 |     /// 当前URL
143 |     current_url: Option<String>,
    |     ^^^^^^^^^^^
144 |     /// 是否已认证
145 |     authenticated: bool,
    |     ^^^^^^^^^^^^^
    |
    = note: `ClientConnection` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `update_activity` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/websocket_server.rs:162:8
    |
148 | impl ClientConnection {
    | --------------------- method in this implementation
...
162 |     fn update_activity(&mut self) {
    |        ^^^^^^^^^^^^^^^

warning: method `record_message_received` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/hot_reload/websocket_server.rs:254:8
    |
233 | impl WebSocketStats {
    | ------------------- method in this implementation
...
254 |     fn record_message_received(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `config` and `incremental_compiler` are never read
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/performance/mod.rs:53:5
   |
52 | pub struct PerformanceManager {
   |            ------------------ fields in this struct
53 |     config: PerformanceConfig,
   |     ^^^^^^
54 |     cache_manager: CacheManager,
55 |     incremental_compiler: IncrementalCompiler,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: field `variables` is never read
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/css/variables.rs:41:5
   |
34 | pub struct CssVariableGenerator {
   |            -------------------- field in this struct
...
41 |     variables: HashMap<String, String>,
   |     ^^^^^^^^^

warning: field `config` is never read
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/ssr/hydration.rs:63:5
   |
61 | pub struct StyleHydration {
   |            -------------- field in this struct
62 |     /// 水合配置
63 |     config: HydrationConfig,
   |     ^^^^^^

warning: field `media_query` is never read
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/theme/core/transform/px2rem.rs:47:5
   |
44 | pub struct Px2RemTransformer {
   |            ----------------- field in this struct
...
47 |     media_query: bool,
   |     ^^^^^^^^^^^

warning: field `mobile_first` is never read
  --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/variants/responsive.rs:46:5
   |
40 | pub struct ResponsiveManager {
   |            ----------------- field in this struct
...
46 |     mobile_first: bool,
   |     ^^^^^^^^^^^^
   |
   = note: `ResponsiveManager` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `get_applied_breakpoints` is never used
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/variants/variant_resolver.rs:554:8
    |
154 | impl VariantResolver {
    | -------------------- method in this implementation
...
554 |     fn get_applied_breakpoints(&self) -> Result<Vec<String>, String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: creating a mutable reference to mutable static
   --> /Users/zxl/Sites/rust/UI/css-in-rust/css-in-rust/src/variants/mod.rs:214:9
    |
214 |         GLOBAL_VARIANT_MANAGER.as_mut().unwrap()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives
    = note: `#[warn(static_mut_refs)]` on by default

warning: `css-in-rust` (lib) generated 30 warnings (run `cargo fix --lib -p css-in-rust` to apply 11 suggestions)
   Compiling ant-design-dioxus v0.1.0 (/Users/zxl/Sites/rust/UI/ant-design-dioxus/output)
error[E0761]: file for module `styles` found at both "src/components/button/styles.rs" and "src/components/button/styles/mod.rs"
  --> src/components/button/mod.rs:39:1
   |
39 | mod styles;
   | ^^^^^^^^^^^
   |
   = help: delete or rename one of them to remove the ambiguity

error[E0583]: file not found for module `examples`
  --> src/components/alert/mod.rs:34:1
   |
34 | pub mod examples;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: to create the module `examples`, create file "src/components/alert/examples.rs" or "src/components/alert/examples/mod.rs"
   = note: if there is a `mod examples` elsewhere in the crate already, import it with `use crate::...` instead

error[E0425]: cannot find function `generate_button_styles` in this scope
  --> src/components/button/component.rs:29:36
   |
29 |     let _styles = use_memo(move || generate_button_styles());
   |                                    ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this function through its public re-export
   |
5  + use crate::prelude::generate_button_styles;
   |

warning: unused import: `super::styles::*`
 --> src/components/button/component.rs:7:5
  |
7 | use super::styles::*;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `styles::*`
  --> src/components/button/mod.rs:52:9
   |
52 | pub use styles::*;
   |         ^^^^^^^^^

warning: unexpected `cfg` condition value: `examples`
  --> src/components/divider/mod.rs:36:7
   |
36 | #[cfg(feature = "examples")]
   |       ^^^^^^^^^^^^^^^^^^^^ help: remove the condition
   |
   = note: no expected values for `feature`
   = help: consider adding `examples` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `examples`
  --> src/components/tag/mod.rs:35:7
   |
35 | #[cfg(feature = "examples")]
   |       ^^^^^^^^^^^^^^^^^^^^ help: remove the condition
   |
   = note: no expected values for `feature`
   = help: consider adding `examples` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `gloo_timers::future::TimeoutFuture`
 --> src/components/alert/component.rs:7:5
  |
7 | use gloo_timers::future::TimeoutFuture;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `LocaleContext`
  --> src/components/alert/component.rs:11:33
   |
11 | use crate::locale::{use_locale, LocaleContext};
   |                                 ^^^^^^^^^^^^^

warning: unused import: `crate::utils::class_names::merge_class_names`
  --> src/components/alert/component.rs:13:5
   |
13 | use crate::utils::class_names::merge_class_names;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `use_compact_mode`, `use_dark_mode`, `use_responsive`, and `use_theme`
 --> src/components/alert/styles.rs:7:20
  |
7 | use crate::theme::{use_theme, use_component_style, use_dark_mode, use_compact_mode, use_responsive};
  |                    ^^^^^^^^^                       ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertProps` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertProps` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertPropsBuilder` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertPropsBuilder` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertPropsBuilder_Optional` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertPropsBuilder_Optional` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertPropsBuilder_Error_Repeated_field_class` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertPropsBuilder_Error_Repeated_field_class` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertPropsBuilder_Error_Repeated_field_style` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertPropsBuilder_Error_Repeated_field_style` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/alert/mod.rs:36:9
   |
36 | pub use component::*;
   |         ^^^^^^^^^^^^ the name `ErrorBoundaryAlertPropsWithOwner` in the type namespace is first re-exported here
37 | pub use types::*;
   |         -------- but the name `ErrorBoundaryAlertPropsWithOwner` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/mod.rs:86:9
   |
86 | pub use alert::*;
   |         ^^^^^^^^ the name `OnCloseCallback` in the type namespace is first re-exported here
...
89 | pub use tag::*;
   |         ------ but the name `OnCloseCallback` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/components/mod.rs:87:9
   |
87 | pub use button::*;
   |         ^^^^^^^^^ the name `VariantStyles` in the type namespace is first re-exported here
88 | pub use divider::*;
   |         ---------- but the name `VariantStyles` in the type namespace is also re-exported here

warning: unused import: `dioxus::prelude::*`
  --> src/components/mod.rs:93:9
   |
93 |     use dioxus::prelude::*;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `css_in_rust::css`
 --> src/config_provider/mod.rs:6:5
  |
6 | use css_in_rust::css;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `LocaleConfig`
  --> src/config_provider/mod.rs:11:29
   |
11 | use crate::locale::{Locale, LocaleConfig};
   |                             ^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/prelude.rs:9:9
   |
9  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^^^^ the name `styles` in the type namespace is first re-exported here
...
27 | pub use crate::shared::*;
   |         ---------------- but the name `styles` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/prelude.rs:9:9
   |
9  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^^^^ the name `Size` in the type namespace is first re-exported here
...
15 | pub use crate::theme::*;
   |         --------------- but the name `Size` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/prelude.rs:12:9
   |
12 | pub use crate::config_provider::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ the name `use_component_size` in the value namespace is first re-exported here
...
15 | pub use crate::theme::*;
   |         --------------- but the name `use_component_size` in the value namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/prelude.rs:15:9
   |
15 | pub use crate::theme::*;
   |         ^^^^^^^^^^^^^^^ the name `tokens` in the type namespace is first re-exported here
...
27 | pub use crate::shared::*;
   |         ---------------- but the name `tokens` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/prelude.rs:27:9
   |
15 | pub use crate::theme::*;
   |         --------------- but the name `dark_theme` in the value namespace is also re-exported here
...
27 | pub use crate::shared::*;
   |         ^^^^^^^^^^^^^^^^ the name `dark_theme` in the value namespace is first re-exported here

warning: unused imports: `Deserialize` and `Serialize`
 --> src/theme/mod.rs:7:13
  |
7 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/theme/mod.rs:9:5
  |
9 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `css_in_rust::theme_bridge::ThemeBridge`
 --> src/theme/provider/mod.rs:5:5
  |
5 | use css_in_rust::theme_bridge::ThemeBridge;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `CssVariablesOptions`
  --> src/theme/provider/mod.rs:10:29
   |
10 | use super::css_vars::{self, CssVariablesOptions};
   |                             ^^^^^^^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/theme/mod.rs:59:9
   |
59 | pub use algorithm::*;
   |         ^^^^^^^^^^^^ the name `adjust_saturation` in the value namespace is first re-exported here
60 | pub use color_utils::*;
   |         -------------- but the name `adjust_saturation` in the value namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/theme/mod.rs:63:9
   |
63 | pub use hooks::*;
   |         ^^^^^^^^ the name `use_css_var_name` in the value namespace is first re-exported here
64 | pub use presets::*;
65 | pub use provider::*;
   |         ----------- but the name `use_css_var_name` in the value namespace is also re-exported here

warning: unused import: `wasm_bindgen::JsCast`
 --> src/utils/style_injector.rs:8:5
  |
8 | use wasm_bindgen::JsCast;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `web`
  --> src/lib.rs:51:11
   |
51 |     #[cfg(feature = "web")]
   |           ^^^^^^^^^^^^^^^ help: remove the condition
   |
   = note: no expected values for `feature`
   = help: consider adding `web` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: variable does not need to be mutable
   --> src/hooks/mod.rs:503:9
    |
503 |     let mut is_pressed = use_signal(|| false);
    |         ----^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `locale_context`
   --> src/locale/mod.rs:873:9
    |
873 |     let locale_context = use_locale();
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `locale_context`
   --> src/locale/mod.rs:882:9
    |
882 |     let locale_context = use_locale();
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`

warning: unused variable: `locale_context`
   --> src/locale/mod.rs:889:9
    |
889 |     let locale_context = use_locale();
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`

warning: unused variable: `locale_context`
   --> src/locale/mod.rs:896:9
    |
896 |     let locale_context = use_locale();
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`

warning: unused variable: `locale_context`
   --> src/locale/mod.rs:928:9
    |
928 |     let locale_context = use_locale();
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`

error[E0560]: struct `AlertAnimationStyles` has no field named `enter`
   --> src/components/alert/styles.rs:609:9
    |
609 |         enter: css!("
    |         ^^^^^ `AlertAnimationStyles` does not have this field
    |
    = note: available fields are: `entering`, `exiting`

error[E0560]: struct `AlertAnimationStyles` has no field named `enter_active`
   --> src/components/alert/styles.rs:616:9
    |
616 |         enter_active: css!("
    |         ^^^^^^^^^^^^ `AlertAnimationStyles` does not have this field
    |
    = note: available fields are: `entering`, `exiting`

error[E0560]: struct `AlertAnimationStyles` has no field named `exit`
   --> src/components/alert/styles.rs:623:9
    |
623 |         exit: css!("
    |         ^^^^ `AlertAnimationStyles` does not have this field
    |
    = note: available fields are: `entering`, `exiting`

error[E0560]: struct `AlertAnimationStyles` has no field named `exit_active`
   --> src/components/alert/styles.rs:629:9
    |
629 |         exit_active: css!("
    |         ^^^^^^^^^^^ `AlertAnimationStyles` does not have this field
    |
    = note: available fields are: `entering`, `exiting`

warning: unused import: `dioxus::prelude`
 --> src/theme/mod.rs:6:5
  |
6 | use dioxus::prelude::*;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `dioxus::prelude`
 --> src/theme/hooks/mod.rs:5:5
  |
5 | use dioxus::prelude::*;
  |     ^^^^^^^^^^^^^^^

warning: unused variable: `props`
   --> src/components/button/component.rs:188:27
    |
188 | fn get_button_group_style(props: &ButtonGroupProps) -> Option<String> {
    |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_props`

warning: unused variable: `theme`
  --> src/components/divider/component.rs:42:9
   |
42 |     let theme = use_theme();
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_theme`

warning: unused variable: `styles`
  --> src/components/divider/component.rs:69:9
   |
69 |     let styles = generate_divider_styles();
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `margin_style`
   --> src/components/divider/component.rs:100:25
    |
100 |             if let Some(margin_style) = style_generator_clone.generate_orientation_margin_style() {
    |                         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_margin_style`

warning: unused variable: `theme`
  --> src/components/tag/component.rs:42:9
   |
42 |     let theme = use_theme();
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_theme`

warning: unused variable: `styles`
  --> src/components/tag/component.rs:62:9
   |
62 |     let styles = generate_tag_styles();
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `style_generator_clone`
  --> src/components/tag/component.rs:66:13
   |
66 |         let style_generator_clone = style_generator.clone();
   |             ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_style_generator_clone`

error[E0507]: cannot move out of `color.0`, as `color` is a captured variable in an `FnMut` closure
  --> src/components/tag/component.rs:82:19
   |
67 |         let color = props.color.clone();
   |             ----- captured outer variable
...
71 |         use_effect(move || {
   |                    ------- captured by this `FnMut` closure
...
82 |             match color {
   |                   ^^^^^
...
89 |                 TagColor::Preset(preset) => {
   |                                  ------
   |                                  |
   |                                  data moved here
   |                                  move occurs because `preset` has type `tag::types::TagPresetColor`, which does not implement the `Copy` trait
   |
help: consider borrowing here
   |
82 |             match &color {
   |                   +

warning: unused variable: `theme`
   --> src/components/tag/component.rs:210:9
    |
210 |     let theme = use_theme();
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_theme`

warning: unused variable: `styles`
   --> src/components/tag/component.rs:218:9
    |
218 |     let styles = generate_tag_styles();
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `theme_context`
  --> src/components/alert/component.rs:93:9
   |
93 |     let theme_context = use_theme();
   |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_theme_context`

warning: unused variable: `is_dark_mode`
  --> src/components/alert/component.rs:94:9
   |
94 |     let is_dark_mode = use_dark_mode();
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_dark_mode`

warning: unused variable: `is_compact_mode`
  --> src/components/alert/component.rs:95:9
   |
95 |     let is_compact_mode = use_compact_mode();
   |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_compact_mode`

warning: unused variable: `locale_context`
  --> src/components/alert/component.rs:98:9
   |
98 |     let locale_context = use_locale();
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_locale_context`

warning: unused variable: `final_style`
   --> src/components/alert/component.rs:149:9
    |
149 |     let final_style = if let Some(custom_style) = &props.style {
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_final_style`

warning: unused variable: `animation_class`
   --> src/components/alert/component.rs:245:9
    |
245 |     let animation_class = if motion {
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_animation_class`

error[E0382]: use of moved value: `props.type`
   --> src/components/alert/component.rs:211:30
    |
109 |         .with_type(props.r#type)
    |                    ------------ value moved here
...
211 |     let default_icon = match props.r#type {
    |                              ^^^^^^^^^^^^ value used here after move
    |
    = note: move occurs because `props.type` has type `alert::types::AlertType`, which does not implement the `Copy` trait

error[E0382]: borrow of moved value: `inline_styles`
   --> src/components/alert/component.rs:271:26
    |
123 |     let inline_styles = style_generator.generate_inline_styles();
    |         ------------- move occurs because `inline_styles` has type `std::string::String`, which does not implement the `Copy` trait
...
156 |         inline_styles
    |         ------------- value moved here
...
271 |         format!("{};{}", inline_styles, animation_style)
    |                          ^^^^^^^^^^^^^ value borrowed here after move
    |
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider cloning the value if the performance cost is acceptable
    |
156 |         inline_styles.clone()
    |                      ++++++++

error[E0382]: borrow of moved value
   --> src/components/alert/component.rs:408:40
    |
357 | #[component]
    | ------------ move occurs because value has type `std::option::Option<std::string::String>`, which does not implement the `Copy` trait
...
393 |                 error_details
    |                 ------------- value moved here
...
408 |                     if show_details && error_details.is_some() {
    |                                        ^^^^^^^^^^^^^ value borrowed here after move
    |
help: consider cloning the value if the performance cost is acceptable
    |
393 |                 error_details.clone()
    |                              ++++++++

warning: unused variable: `lines`
  --> src/shared/styles/mixins.rs:38:32
   |
38 | pub fn text_ellipsis_multiline(lines: u32) -> String {
   |                                ^^^^^ help: if this is intentional, prefix it with an underscore: `_lines`

warning: unused variable: `width`
   --> src/shared/styles/mixins.rs:140:25
    |
140 | pub fn custom_scrollbar(width: &str, track_color: &str, thumb_color: &str) -> String {
    |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_width`

warning: unused variable: `track_color`
   --> src/shared/styles/mixins.rs:140:38
    |
140 | pub fn custom_scrollbar(width: &str, track_color: &str, thumb_color: &str) -> String {
    |                                      ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_track_color`

warning: unused variable: `thumb_color`
   --> src/shared/styles/mixins.rs:140:57
    |
140 | pub fn custom_scrollbar(width: &str, track_color: &str, thumb_color: &str) -> String {
    |                                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_thumb_color`

warning: unused variable: `property`
   --> src/shared/styles/mixins.rs:163:19
    |
163 | pub fn transition(property: &str, duration: &str, timing: &str) -> String {
    |                   ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_property`

warning: unused variable: `duration`
   --> src/shared/styles/mixins.rs:163:35
    |
163 | pub fn transition(property: &str, duration: &str, timing: &str) -> String {
    |                                   ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_duration`

warning: unused variable: `timing`
   --> src/shared/styles/mixins.rs:163:51
    |
163 | pub fn transition(property: &str, duration: &str, timing: &str) -> String {
    |                                                   ^^^^^^ help: if this is intentional, prefix it with an underscore: `_timing`

warning: unused variable: `color`
   --> src/shared/styles/mixins.rs:197:21
    |
197 | pub fn focus_effect(color: &str) -> String {
    |                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_color`

warning: unused variable: `breakpoint`
   --> src/shared/styles/mixins.rs:249:19
    |
249 | pub fn responsive(breakpoint: &str, styles: &str) -> String {
    |                   ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_breakpoint`

warning: unused variable: `styles`
   --> src/shared/styles/mixins.rs:249:37
    |
249 | pub fn responsive(breakpoint: &str, styles: &str) -> String {
    |                                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `styles`
   --> src/shared/styles/mixins.rs:262:19
    |
262 | pub fn dark_theme(styles: &str) -> String {
    |                   ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `styles`
   --> src/shared/styles/mixins.rs:275:28
    |
275 | pub fn high_contrast_theme(styles: &str) -> String {
    |                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `styles`
   --> src/shared/styles/mixins.rs:288:23
    |
288 | pub fn reduced_motion(styles: &str) -> String {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `styles`
   --> src/shared/styles/mixins.rs:301:21
    |
301 | pub fn print_styles(styles: &str) -> String {
    |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_styles`

warning: unused variable: `seed`
   --> src/theme/algorithm/mod.rs:506:5
    |
506 |     seed: &SeedToken,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_seed`

warning: unused variable: `theme_context`
  --> src/theme/hooks/mod.rs:49:9
   |
49 |     let theme_context = use_theme();
   |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_theme_context`

warning: unused variable: `sm`
   --> src/theme/hooks/mod.rs:102:5
    |
102 |     sm: Option<T>,
    |     ^^ help: if this is intentional, prefix it with an underscore: `_sm`

warning: unused variable: `md`
   --> src/theme/hooks/mod.rs:103:5
    |
103 |     md: Option<T>,
    |     ^^ help: if this is intentional, prefix it with an underscore: `_md`

warning: unused variable: `lg`
   --> src/theme/hooks/mod.rs:104:5
    |
104 |     lg: Option<T>,
    |     ^^ help: if this is intentional, prefix it with an underscore: `_lg`

warning: unused variable: `xl`
   --> src/theme/hooks/mod.rs:105:5
    |
105 |     xl: Option<T>,
    |     ^^ help: if this is intentional, prefix it with an underscore: `_xl`

warning: unused variable: `xxl`
   --> src/theme/hooks/mod.rs:106:5
    |
106 |     xxl: Option<T>,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_xxl`

Some errors have detailed explanations: E0382, E0425, E0507, E0560, E0583, E0761.
For more information about an error, try `rustc --explain E0382`.
warning: `ant-design-dioxus` (lib) generated 76 warnings
error: could not compile `ant-design-dioxus` (lib) due to 11 previous errors; 76 warnings emitted
